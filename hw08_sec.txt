### 1. Настроить сетевой фильтр, чтобы из внешней сети можно было обратиться только к сервисам http (80 и 443) и ssh. Отключить фаервол облачного провайдера
На EC2 удалены все правила и оставлено All traffic в Inbound Rules

ubuntu@ip-172-31-45-250:~$ cat iptables.rules
# Generated by iptables-save v1.8.4 on Sun Feb 21 06:53:44 2021
*filter
:INPUT ACCEPT [146:10402]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [86:7570]
# Completed on Sun Feb 21 06:53:44 2021
-A INPUT -p udp -m udp --dport 68 -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p icmp --icmp-type echo-request -j ACCEPT
-A INPUT -p tcp -m conntrack --ctstate NEW -m tcp --dport 22 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT
-A INPUT -j DROP
COMMIT

ubuntu@ip-172-31-45-250:~$ sudo iptables-restore < iptables.rules
ubuntu@ip-172-31-45-250:~$ sudo iptables -S
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-A INPUT -p udp -m udp --dport 68 -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT
-A INPUT -p tcp -m conntrack --ctstate NEW -m tcp --dport 22 -j ACCEPT
-A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT
-A INPUT -j DROP

ubuntu@ip-172-31-45-250:~$ sudo netfilter-persistent save

### 2. Настроить SSH аутентификацию только по ключу, отключить парольную аутентификацию, запретить логин под root
tubalov@ubuntugb:~$ ssh-keygen -t ed25519 -b 4096 -f ~/.ssh/tubalov2_id_ed25519 -C "tubalov@gmail.com"
Generating public/private ed25519 key pair.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/tubalov/.ssh/tubalov2_id_ed25519
Your public key has been saved in /home/tubalov/.ssh/tubalov2_id_ed25519.pub
The key fingerprint is:
SHA256:2rfqhHlbylmcGhNz1MwI0bX0S7KB+pAulSpuCtftmHg tubalov@gmail.com
The key's randomart image is:
+--[ED25519 256]--+
|        oo .o    |
|         ..B o   |
|          + B o  |
|         =   = . |
|        S . . .  |
|   . . O B .     |
|. . o B B B      |
| o oE= = @ .     |
|  o++ ..O..      |
+----[SHA256]-----+


ubuntu@ip-172-31-45-250:~$ sudo su - tubalov
To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.
tubalov@ip-172-31-45-250:~$ nano .ssh/authorized_keys
tubalov@ip-172-31-45-250:~$ cat .ssh/authorized_keys
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDJGWQuZbeMMQQ88O/9HVaMwYR6CCnz3JylT7Nr2kVUF tubalov@gmail.com

tubalov@ubuntugb:~$ ssh tubalov@18.224.190.61 -i ~/.ssh/tubalov2_id_ed25519
Enter passphrase for key '/home/tubalov/.ssh/tubalov2_id_ed25519':
Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-1037-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Fri Feb 19 21:11:01 UTC 2021

  System load:  0.0               Processes:             118
  Usage of /:   31.7% of 7.69GB   Users logged in:       1
  Memory usage: 63%               IPv4 address for eth0: 172.31.45.250
  Swap usage:   0%

 * Introducing self-healing high availability clusters in MicroK8s.
   Simple, hardened, Kubernetes for production, from RaspberryPi to DC.

     https://microk8s.io/high-availability

15 updates can be installed immediately.
0 of these updates are security updates.
To see these additional updates run: apt list --upgradable


*** System restart required ***

The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.


ubuntu@ip-172-31-45-250:~$ sudo cat /etc/ssh/sshd_config

Доступы запрещены по-умолчанию
#PermitRootLogin prohibit-password

# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication no
#PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

### 3. Поставить и настроить fail2ban на блокировку SSH запросов с неверным паролем/ключом. Проверить работу fail2ban
ubuntu@ip-172-31-45-250:~$ sudo apt install fail2ban

ubuntu@ip-172-31-45-250:~$ sudo cat /etc/fail2ban/jail.d/defaults-debian.conf
[sshd]
enabled = true
bantime = 60
maxretry = 3

ubuntu@ip-172-31-45-250:~$ sudo service fail2ban restart
ubuntu@ip-172-31-45-250:~$ sudo service fail2ban status
● fail2ban.service - Fail2Ban Service
     Loaded: loaded (/lib/systemd/system/fail2ban.service; enabled; vendor preset: enabled)
     Active: active (running) since Sun 2021-02-21 08:00:32 UTC; 2s ago
       Docs: man:fail2ban(1)
    Process: 88623 ExecStartPre=/bin/mkdir -p /run/fail2ban (code=exited, status=0/SUCCESS)
   Main PID: 88633 (f2b/server)
      Tasks: 5 (limit: 1160)
     Memory: 11.0M
     CGroup: /system.slice/fail2ban.service
             └─88633 /usr/bin/python3 /usr/bin/fail2ban-server -xf start

Feb 21 08:00:32 ip-172-31-45-250 systemd[1]: Starting Fail2Ban Service...
Feb 21 08:00:32 ip-172-31-45-250 systemd[1]: Started Fail2Ban Service.
Feb 21 08:00:32 ip-172-31-45-250 fail2ban-server[88633]: Server ready


### 4. * Установить certbot и получить SSL сертификат для вашего домена
ubuntu@ip-172-31-45-250:~$ sudo snap install --classic certbot
ubuntu@ip-172-31-45-250:~$ sudo certbot --nginx -d ds-tubalov.ml  --register-unsafely-without-email
ubuntu@ip-172-31-45-250:~$ sudo certbot renew --dry-run
Saving debug log to /var/log/letsencrypt/letsencrypt.log

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Processing /etc/letsencrypt/renewal/ds-tubalov.ml.conf
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Cert not due for renewal, but simulating renewal for dry run
Plugins selected: Authenticator nginx, Installer nginx
Simulating renewal of an existing certificate for ds-tubalov.ml
Performing the following challenges:
http-01 challenge for ds-tubalov.ml
Waiting for verification...
Cleaning up challenges

ubuntu@ip-172-31-45-250:~$ sudo ls -l /etc/letsencrypt/live/ds-tubalov.ml
total 4
-rw-r--r-- 1 root root 692 Feb 16 17:36 README
lrwxrwxrwx 1 root root  37 Feb 16 17:36 cert.pem -> ../../archive/ds-tubalov.ml/cert1.pem
lrwxrwxrwx 1 root root  38 Feb 16 17:36 chain.pem -> ../../archive/ds-tubalov.ml/chain1.pem
lrwxrwxrwx 1 root root  42 Feb 16 17:36 fullchain.pem -> ../../archive/ds-tubalov.ml/fullchain1.pem
lrwxrwxrwx 1 root root  40 Feb 16 17:36 privkey.pem -> ../../archive/ds-tubalov.ml/privkey1.pem

ubuntu@ip-172-31-45-250:~$ ls -l /etc/nginx/ssl/
total 0
lrwxrwxrwx 1 root root 49 Feb 16 17:40 ds-tubalov.ml.crt -> /etc/letsencrypt/live/ds-tubalov.ml/fullchain.pem
lrwxrwxrwx 1 root root 47 Feb 16 17:43 ds-tubalov.ml.key -> /etc/letsencrypt/live/ds-tubalov.ml/privkey.pem

ubuntu@ip-172-31-45-250:~$ sudo service nginx restart


### 5. * Настроить nginx на редирект запросов с 80 порта на 443 и подключить полученные SSL сертификаты

ubuntu@ip-172-31-45-250:~$ sudo cat /etc/nginx/sites-enabled/ds-tubalov.ml
server {
    server_name ds-tubalov.ml;

    root /usr/share/phpmyadmin/;
    index  index.php;

    client_max_body_size 100M;

    autoindex off;

     location / {
        try_files $uri $uri/ /index.php?$query_string;
      }

    location ~ \.php$ {
         fastcgi_pass unix:/var/run/php/php-fpm.sock;
         fastcgi_index index.php;
         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
         include fastcgi_params;
    }

    location ~* \.(ico|css|js)(\?[0-9]+)?$ {
         expires max;
         log_not_found off;
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/ds-tubalov.ml/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ds-tubalov.ml/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = ds-tubalov.ml) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;
    server_name ds-tubalov.ml;
    return 404; # managed by Certbot


}ubuntu@ip-172-31-45-250:~$


